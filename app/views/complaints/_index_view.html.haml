%tr{class: "table-row complaint-id-#{complaint.id} complaint-index #{complaint.status}"}
  %td
    -if complaint.has_unviewed_messages
      %span.new.badge{ :'data-badge-caption' => "Unread Messages"}
    %h5= link_to complaint.content_shortened, complaints_find_path(complaint_key: complaint.key)
    = "#{complaint.user.to_s_with_fields} | Tip Key:  #{complaint.key}"
    / = complaint.allegation_types_as_nice_string
    -if complaint.video_links
      -complaint.video_links_array.each do |v|
        %a{href: v} Video Link
    -if complaint.media[0]
      -complaint.media.each do |url|
        %a{ :href => url, :title => "View attachment" }View attachment
    -elsif !complaint.media[0] && !complaint.video_links
      %div (No media attached)
    %table
      %th{class: "current complaint-id-#{complaint.id}"}=button_to complaint.status, update_complaint_path(id: complaint.id, complaint_key: complaint.key, status: complaint.status), method:'put', form_class: "status-button", class: "btn-small status disabled current-status status-button"
      -complaint.possible_other_statuses.each do |st|
        %th{class: "non-current complaint-id-#{complaint.id}"}= button_to st, update_complaint_path(id: complaint.id, complaint_key: complaint.key, status: st), method:'put',form_class: "status-button", class: "btn-small status status-button"
